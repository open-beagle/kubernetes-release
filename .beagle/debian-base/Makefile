# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

all: all-build

REGISTRY ?= registry.cn-qingdao.aliyuncs.com/wod
IMAGE ?= $(REGISTRY)/debian-base
BUILD_IMAGE ?= debian-build

TAG ?= $(shell git describe --tags --always --dirty)
IMAGE_VERSION ?= v1.4.2
CONFIG ?= bullseye

TAR_FILE ?= rootfs.tar
ARCH ?= amd64
ALL_ARCH = amd64 arm64 ppc64le mips64le loong64

QEMUVERSION=6.1.0-8

# This option is for running docker manifest command
export DOCKER_CLI_EXPERIMENTAL := enabled

ifeq ($(ARCH),amd64)
	BASEIMAGE?=registry.cn-qingdao.aliyuncs.com/wod/debian:$(CONFIG)-slim-amd64
	QEMUARCH=x86_64
endif
ifeq ($(ARCH),arm64)
	BASEIMAGE?=registry.cn-qingdao.aliyuncs.com/wod/debian:$(CONFIG)-slim-arm64
	QEMUARCH=arm64
endif
ifeq ($(ARCH),ppc64le)
	BASEIMAGE?=registry.cn-qingdao.aliyuncs.com/wod/debian:$(CONFIG)-slim-ppc64le
	QEMUARCH=ppc64le
endif
ifeq ($(ARCH),mips64le)
	BASEIMAGE?=registry.cn-qingdao.aliyuncs.com/wod/debian:$(CONFIG)-slim-mips64le
	QEMUARCH=mips64le
endif
ifeq ($(ARCH),loong64)
	BASEIMAGE?=registry.cn-qingdao.aliyuncs.com/wod/debian:buster-slim-loong64
	QEMUARCH=loong64
endif

sub-build-%:
	$(MAKE) ARCH=$* build

all-build: $(addprefix sub-build-,$(ALL_ARCH))

sub-push-image-%:
	$(MAKE) ARCH=$* push

all-push-images: $(addprefix sub-push-image-,$(ALL_ARCH))

all-push: all-push-images push-manifest

push-manifest:
	docker manifest create --amend $(IMAGE):$(IMAGE_VERSION) $(shell echo $(ALL_ARCH) | sed -e "s~[^ ]*~$(IMAGE):$(IMAGE_VERSION)\-&~g")
	@for arch in $(ALL_ARCH); do docker manifest annotate --arch $${arch} ${IMAGE}:${IMAGE_VERSION} ${IMAGE}:${IMAGE_VERSION}-$${arch}; done
	docker manifest push --purge ${IMAGE}:${IMAGE_VERSION}

build: clean
	# Fix possible issues with the local umask
	umask 0022

	# Enable execution of multi-architecture containers
	# docker run --rm --privileged multiarch/qemu-user-static:$(QEMUVERSION) --reset -p yes
	# docker buildx version
	# BUILDER=$(shell docker create --use)

	docker build \
		--pull \
		--build-arg BASEIMAGE=$(BASEIMAGE) \
		--build-arg ARCH=$(QEMUARCH) \
		-t $(BUILD_IMAGE) \
		-f $(CONFIG)/Dockerfile.build \
		$(CONFIG)
	docker create --name $(BUILD_IMAGE) $(BUILD_IMAGE)
	docker export $(BUILD_IMAGE) > $(CONFIG)/$(TAR_FILE)
	docker build \
		-t $(IMAGE):$(IMAGE_VERSION)-$(ARCH) \
		-t $(IMAGE):$(TAG)-$(ARCH) \
		-t $(IMAGE):latest-$(ARCH) \
		$(CONFIG)
	# docker rm $$BUILDER
	rm $(CONFIG)/rootfs.tar

push: build
	docker push $(IMAGE):$(IMAGE_VERSION)-$(ARCH)
	docker push $(IMAGE):$(TAG)-$(ARCH)
	docker push $(IMAGE):latest-$(ARCH)

clean:
	docker rmi -f $(IMAGE):$(IMAGE_VERSION)-$(ARCH) || true
	docker rmi -f $(BUILD_IMAGE)   || true
	docker rm  -f $(BUILD_IMAGE)   || true
